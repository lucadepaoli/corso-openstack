heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public
  network, and for deploying two servers into the new network. The template also
  assigns floating IP addresses to each server so they are routable from the
  public network.

resources:
  private_net:
    type: OS::Neutron::Net
    properties:
      name: "ByHeat01"

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: "10.11.12.0/24"
      dns_nameservers: [ "8.8.8.8", "8.8.4.4" ]

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: "public"

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  server1:
    type: OS::Nova::Server
    properties:
      name: SrvByHeat01
      image: "LINUX_cirros"
      flavor: "elm.small"
      networks:
        - port: { get_resource: server1_port }

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  server1_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: "public"
      port_id: { get_resource: server1_port }
  server2:
    type: OS::Nova::Server
    properties:
      name: "SrvByHeat02"
      image: "LINUX_Centos_7"
      flavor: "elm.small"
      networks:
        - network: { get_resource: private_net }

outputs:
  server2:
    description: IP Address of SrvByHeat02
    value: { get_attr: [ server2, first_address ] }
  server1_private_ip:
    description: IP address of server1 in private network
    value: { get_attr: [ server1, first_address ] }
  server1_public_ip:
    description: Floating IP address of server1 in public network
    value: { get_attr: [ server1_floating_ip, floating_ip_address ] }
